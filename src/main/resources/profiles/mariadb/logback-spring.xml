<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>                              <!-- Log file directory settings -->
    <property name="LOG_DIR" value="log_data/"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">                                 <!-- For console log settings -->
        <encoder>
            <pattern>%d{yyyyMMdd HH:mm:ss.SSS} [%thread] %-3level %logger{5} - %msg %n</pattern>
        </encoder>
    </appender>


    <appender name="dailyRollingFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">    <!--For setting the daily log update file -->
        <prudent>true</prudent>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}applicatoin.%d{yyyy-MM-dd}.log</fileNamePattern>                   <!--fileNamePattern:  rollover settings , using the OS daily file changing with yyyy-mm-dd. The currently active log file is used by fileNamePattern to be the same as the file name of the current period calculated by OS date kernel -->
            <maxHistory>31</maxHistory>                                                                    <!--maxHistory: Allow maximum number of log file directories  -->
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">                                    <!-- Setting the appender's log threshold: Setting logs below the appender's threshold are not shown. -->
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>%d{yyyyMMdd HH:mm:ss.SSS} [%thread] %-3level %logger{5} - %msg %n</pattern>
        </encoder>
    </appender>


    <logger name="jdbc" level="OFF"/>
    <logger name="jdbc.sqlonly" level="OFF"/>
    <logger name="jdbc.sqltiming" level="DEBUG"/>
    <logger name="jdbc.audit" level="OFF"/>
    <logger name="jdbc.resultset" level="OFF"/>
    <logger name="jdbc.resultsettable" level="DEBUG"/>
    <logger name="jdbc.connection" level="OFF"/>

    <root level="INFO">                                                                                    <!--[EXEC] root level : application.properties, logger> Sets a common root log level that has not been custom-tuned to level. -->
        <!-- <appender-ref ref="STDOUT" /> -->
        <appender-ref ref="dailyRollingFileAppender"/>
    </root>
</configuration>

<!--  - jdbc.sqlonly : Only SQL statements are logged, and in the case of PreparedStatement, SQL statements replaced with the related argument values are shown.  -->
<!--  - jdbc.sqltiming : It contains the SQL statement and the time information (milliseconds) taken to execute the SQL.  -->
<!--  - jdbc.audit : All JDBC Log information except ResultSet. We do not recommend using it unless there is a need to track JDBC problems, especially because large amounts of logs are generated.  -->
<!--  - jdbc.resultset : All JDBC call information, including ResultSet, is logged, creating a very large amount of logs. no recomened  -->
<!--  - jdbc.resultsettable : SQL Result Logs a table of queried data.-->